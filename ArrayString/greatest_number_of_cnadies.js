/**
 * @param {number[]} candies
 * @param {number} extraCandies
 * @return {boolean[]}
 */
function kidsWithCandies(candies, extraCandies) {
  let result = [];
  let max = Math.max.apply(Math, candies);

  for (const key of candies) {
    if ((key + extraCandies) >= max) {
      result.push(true);
    } else {
      result.push(false);
    }
  }

  return result;
}

/**
 * Test generated by AI
 */

function testKidsWithCandies() {
  const tests = [
      {
          input: { candies: [2, 3, 5, 1, 3], extraCandies: 3 },
          expected: [true, true, true, false, true],
      },
      {
          input: { candies: [4, 2, 1, 1, 2], extraCandies: 1 },
          expected: [true, false, false, false, false],
      },
      {
          input: { candies: [12, 1, 12], extraCandies: 10 },
          expected: [true, false, true],
      },
      {
          input: { candies: [1, 1, 1, 1], extraCandies: 0 },
          expected: [true, true, true, true],
      },
      {
          input: { candies: [1, 2, 3, 4, 5], extraCandies: 5 },
          expected: [true, true, true, true, true],
      },
      {
          input: { candies: [5, 2, 9, 4, 7], extraCandies: 3 },
          expected: [false, false, true, false, true],
      },
      {
          input: { candies: [10, 10, 10], extraCandies: 0 },
          expected: [true, true, true],
      }
  ];

  tests.forEach(({ input, expected }, index) => {
      const result = kidsWithCandies(input.candies, input.extraCandies);
      const isPassing = JSON.stringify(result) === JSON.stringify(expected);
      console.log(`Test ${index + 1}: ${isPassing ? 'PASS' : 'FAIL'}`);
      if (!isPassing) {
          console.log(`  Input: ${JSON.stringify(input)}`);
          console.log(`  Expected: ${JSON.stringify(expected)}`);
          console.log(`  Got: ${JSON.stringify(result)}`);
      }
  });
}

// Call the test function
testKidsWithCandies();
